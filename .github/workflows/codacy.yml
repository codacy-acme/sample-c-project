name: Client Side Tools and Coverage

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Process clang-tidy warnings
        uses: asarium/clang-tidy-action@v1
        with:
          fixesFile: clang-fixes.yaml

      - name: Install dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get -y -qq install openjdk-8-jdk openjdk-8-jre bear
          pip3 install coverage
          pip3 install pytest

      - name: Run tests and collect coverage
        run: |
          gcc -o my_program *.c -fprofile-arcs -ftest-coverage
          ./my_program
          gcov *.c

      - name: Generate coverage XML report
        run: |
          sudo apt-get update -y
          sudo apt-get install lcov -y
          pip3 install lcov_cobertura
          lcov --capture --directory . --output-file coverage.info
          lcov --list coverage.info # Optional, for human-readable summary
          lcov_cobertura coverage.info --output $GITHUB_WORKSPACE/coverage.xml

      - name: Upload coverage report to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r $GITHUB_WORKSPACE/coverage.xml

      - name: Setup Codacy Clang-Tidy
        run: |
          wget https://github.com/codacy/codacy-clang-tidy/releases/download/1.3.8/codacy-clang-tidy-linux-1.3.8

      - name: Generate Compilation Database
        run: |
          bear -- gcc -o my_program *.c -fprofile-arcs -ftest-coverage

      - name: Run Codacy Clang-Tidy Analysis
        env:
          PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
          COMMIT: ${{ github.sha }}
        run: |
          chmod +x codacy-clang-tidy-linux-1.3.8
          clang-tidy -checks=* -p=. *.c | \
          ./codacy-clang-tidy-linux-1.3.8 | \
          curl -XPOST -L -H "project-token: $PROJECT_TOKEN" \
          -H "Content-type: application/json" -d @- \
          "https://api.codacy.com/2.0/commit/$COMMIT/issuesRemoteResults"
          curl -XPOST -L -H "project-token: $PROJECT_TOKEN" \
          -H "Content-type: application/json" \
          "https://api.codacy.com/2.0/commit/$COMMIT/resultsFinal"

